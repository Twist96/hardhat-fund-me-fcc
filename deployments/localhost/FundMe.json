{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x49e46f8805c0b59b0a3798de6b83b3e60688b7688c735bb1fa7d81c52559d5ed",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1074590",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x38b60043d79ff00426e5e41604d1b7305e13b96b2e741acc14e10150864396ad",
    "transactionHash": "0x49e46f8805c0b59b0a3798de6b83b3e60688b7688c735bb1fa7d81c52559d5ed",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1074590",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ee78d64a8bb9c5e638a39b6eb3043987",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Matthew Chukwuemeka\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"},\"withdraw()\":{\"notice\":\"This function withdrawals from this contract\"}},\"notice\":\"This contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\n// Pragma\\npragma solidity ^0.8.8;\\n\\n//imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n\\n/** @title A contract for crowd funding\\n * @author Matthew Chukwuemeka\\n * @notice This contract is to demo a simple funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    //Constants\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Modifier\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Function\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     */\\n    function fund() public payable {\\n        // set minimum eth\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    /**\\n     * @notice This function withdrawals from this contract\\n     */\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funderAddress = s_funders[funderIndex];\\n            s_addressToAmountFunded[funderAddress] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call faild\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mapping can't be in memory\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < funders.length;\\n            fundersIndex++\\n        ) {\\n            address funder = funders[fundersIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x24fb20f07adb1ce18e24e68fdb62b190d1824a6096081170bad57126ed83703d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\\n//  AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n//             0x779877A7B0D9E8603169DdbD7836e478b4624789\\n//         );\\n\",\"keccak256\":\"0x9cce5f81d933b69fb0e82f65298fb453634c7e062e4dc962d7b4ad05cb976455\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200139938038062001399833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611213620001866000396000818161041c0152818161066b015281816106bb01526108b101526112136000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101c457610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b74565b61032a565b6040516100d79190610bba565b60405180910390f35b3480156100ec57600080fd5b506100f5610373565b6040516101029190610bba565b60405180910390f35b34801561011757600080fd5b5061012061041a565b005b34801561012e57600080fd5b5061013761065a565b6040516101449190610bba565b60405180910390f35b34801561015957600080fd5b50610162610667565b60405161016f9190610be4565b60405180910390f35b34801561018457600080fd5b5061018d61068f565b60405161019a9190610c5e565b60405180910390f35b6101ab610201565b005b3480156101b957600080fd5b506101c26106b9565b005b3480156101d057600080fd5b506101eb60048036038101906101e69190610ca5565b610947565b6040516101f89190610be4565b60405180910390f35b6802b5e3af16b1880000610240600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098e90919063ffffffff16565b1015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610d2f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103dd57600080fd5b505afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190610d64565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561054a5760008082815481106104c4576104c3610d91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054290610def565b9150506104a2565b50600067ffffffffffffffff81111561056657610565610e38565b5b6040519080825280602002602001820160405280156105945781602001602082028036833780820191505090505b50600090805190602001906105aa929190610a6a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105d190610e98565b60006040518083038185875af1925050503d806000811461060e576040519150601f19603f3d011682016040523d82523d6000602084013e610613565b606091505b5050905080610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610ef9565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107c157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610777575b5050505050905060005b815181101561084c5760008282815181106107e9576107e8610d91565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061084490610def565b9150506107cb565b50600067ffffffffffffffff81111561086857610867610e38565b5b6040519080825280602002602001820160405280156108965781602001602082028036833780820191505090505b50600090805190602001906108ac929190610a6a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108f390610e98565b60006040518083038185875af1925050503d8060008114610930576040519150601f19603f3d011682016040523d82523d6000602084013e610935565b606091505b505090508061094357600080fd5b5050565b600080828154811061095c5761095b610d91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061099a836109ca565b90506000670de0b6b3a764000085836109b39190610f19565b6109bd9190610fa2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b919061104b565b5050509150506402540be40081610a6291906110c6565b915050919050565b828054828255906000526020600020908101928215610ae3579160200282015b82811115610ae25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a8a565b5b509050610af09190610af4565b5090565b5b80821115610b0d576000816000905550600101610af5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4182610b16565b9050919050565b610b5181610b36565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b600060208284031215610b8a57610b89610b11565b5b6000610b9884828501610b5f565b91505092915050565b6000819050919050565b610bb481610ba1565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b610bde81610b36565b82525050565b6000602082019050610bf96000830184610bd5565b92915050565b6000819050919050565b6000610c24610c1f610c1a84610b16565b610bff565b610b16565b9050919050565b6000610c3682610c09565b9050919050565b6000610c4882610c2b565b9050919050565b610c5881610c3d565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b610c8281610ba1565b8114610c8d57600080fd5b50565b600081359050610c9f81610c79565b92915050565b600060208284031215610cbb57610cba610b11565b5b6000610cc984828501610c90565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d19601383610cd2565b9150610d2482610ce3565b602082019050919050565b60006020820190508181036000830152610d4881610d0c565b9050919050565b600081519050610d5e81610c79565b92915050565b600060208284031215610d7a57610d79610b11565b5b6000610d8884828501610d4f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfa82610ba1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2d57610e2c610dc0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e82600083610e67565b9150610e8d82610e72565b600082019050919050565b6000610ea382610e75565b9150819050919050565b7f43616c6c206661696c6400000000000000000000000000000000000000000000600082015250565b6000610ee3600a83610cd2565b9150610eee82610ead565b602082019050919050565b60006020820190508181036000830152610f1281610ed6565b9050919050565b6000610f2482610ba1565b9150610f2f83610ba1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6857610f67610dc0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fad82610ba1565b9150610fb883610ba1565b925082610fc857610fc7610f73565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ff281610fd3565b8114610ffd57600080fd5b50565b60008151905061100f81610fe9565b92915050565b6000819050919050565b61102881611015565b811461103357600080fd5b50565b6000815190506110458161101f565b92915050565b600080600080600060a0868803121561106757611066610b11565b5b600061107588828901611000565b955050602061108688828901611036565b945050604061109788828901610d4f565b93505060606110a888828901610d4f565b92505060806110b988828901611000565b9150509295509295909350565b60006110d182611015565b91506110dc83611015565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561111b5761111a610dc0565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561115857611157610dc0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561119557611194610dc0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111d2576111d1610dc0565b5b82820290509291505056fea26469706673582212201e1c259db54d75bb4238648d96afd2a9822deaf6c2c280b8396318a8aa71fd6e64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101c457610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b74565b61032a565b6040516100d79190610bba565b60405180910390f35b3480156100ec57600080fd5b506100f5610373565b6040516101029190610bba565b60405180910390f35b34801561011757600080fd5b5061012061041a565b005b34801561012e57600080fd5b5061013761065a565b6040516101449190610bba565b60405180910390f35b34801561015957600080fd5b50610162610667565b60405161016f9190610be4565b60405180910390f35b34801561018457600080fd5b5061018d61068f565b60405161019a9190610c5e565b60405180910390f35b6101ab610201565b005b3480156101b957600080fd5b506101c26106b9565b005b3480156101d057600080fd5b506101eb60048036038101906101e69190610ca5565b610947565b6040516101f89190610be4565b60405180910390f35b6802b5e3af16b1880000610240600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461098e90919063ffffffff16565b1015610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610d2f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103dd57600080fd5b505afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190610d64565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561054a5760008082815481106104c4576104c3610d91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054290610def565b9150506104a2565b50600067ffffffffffffffff81111561056657610565610e38565b5b6040519080825280602002602001820160405280156105945781602001602082028036833780820191505090505b50600090805190602001906105aa929190610a6a565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105d190610e98565b60006040518083038185875af1925050503d806000811461060e576040519150601f19603f3d011682016040523d82523d6000602084013e610613565b606091505b5050905080610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610ef9565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461073e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107c157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610777575b5050505050905060005b815181101561084c5760008282815181106107e9576107e8610d91565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061084490610def565b9150506107cb565b50600067ffffffffffffffff81111561086857610867610e38565b5b6040519080825280602002602001820160405280156108965781602001602082028036833780820191505090505b50600090805190602001906108ac929190610a6a565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108f390610e98565b60006040518083038185875af1925050503d8060008114610930576040519150601f19603f3d011682016040523d82523d6000602084013e610935565b606091505b505090508061094357600080fd5b5050565b600080828154811061095c5761095b610d91565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061099a836109ca565b90506000670de0b6b3a764000085836109b39190610f19565b6109bd9190610fa2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b919061104b565b5050509150506402540be40081610a6291906110c6565b915050919050565b828054828255906000526020600020908101928215610ae3579160200282015b82811115610ae25782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a8a565b5b509050610af09190610af4565b5090565b5b80821115610b0d576000816000905550600101610af5565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4182610b16565b9050919050565b610b5181610b36565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b600060208284031215610b8a57610b89610b11565b5b6000610b9884828501610b5f565b91505092915050565b6000819050919050565b610bb481610ba1565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b610bde81610b36565b82525050565b6000602082019050610bf96000830184610bd5565b92915050565b6000819050919050565b6000610c24610c1f610c1a84610b16565b610bff565b610b16565b9050919050565b6000610c3682610c09565b9050919050565b6000610c4882610c2b565b9050919050565b610c5881610c3d565b82525050565b6000602082019050610c736000830184610c4f565b92915050565b610c8281610ba1565b8114610c8d57600080fd5b50565b600081359050610c9f81610c79565b92915050565b600060208284031215610cbb57610cba610b11565b5b6000610cc984828501610c90565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d19601383610cd2565b9150610d2482610ce3565b602082019050919050565b60006020820190508181036000830152610d4881610d0c565b9050919050565b600081519050610d5e81610c79565b92915050565b600060208284031215610d7a57610d79610b11565b5b6000610d8884828501610d4f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfa82610ba1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2d57610e2c610dc0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e82600083610e67565b9150610e8d82610e72565b600082019050919050565b6000610ea382610e75565b9150819050919050565b7f43616c6c206661696c6400000000000000000000000000000000000000000000600082015250565b6000610ee3600a83610cd2565b9150610eee82610ead565b602082019050919050565b60006020820190508181036000830152610f1281610ed6565b9050919050565b6000610f2482610ba1565b9150610f2f83610ba1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f6857610f67610dc0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fad82610ba1565b9150610fb883610ba1565b925082610fc857610fc7610f73565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ff281610fd3565b8114610ffd57600080fd5b50565b60008151905061100f81610fe9565b92915050565b6000819050919050565b61102881611015565b811461103357600080fd5b50565b6000815190506110458161101f565b92915050565b600080600080600060a0868803121561106757611066610b11565b5b600061107588828901611000565b955050602061108688828901611036565b945050604061109788828901610d4f565b93505060606110a888828901610d4f565b92505060806110b988828901611000565b9150509295509295909350565b60006110d182611015565b91506110dc83611015565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561111b5761111a610dc0565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561115857611157610dc0565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561119557611194610dc0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111d2576111d1610dc0565b5b82820290509291505056fea26469706673582212201e1c259db54d75bb4238648d96afd2a9822deaf6c2c280b8396318a8aa71fd6e64736f6c63430008080033",
  "devdoc": {
    "author": "Matthew Chukwuemeka",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      },
      "withdraw()": {
        "notice": "This function withdrawals from this contract"
      }
    },
    "notice": "This contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}